{"version":3,"sources":["main.9dcf5811.chunk.css","webpack://src/_libs/_fonts/fonts.css","webpack://src/index.scss","webpack://src/components/global/Storage/Storage.module.scss","webpack://src/Apps/App.scss","webpack://src/_libs/_styles/include-media.scss","webpack://src/components/ui/Button/Button.module.scss","webpack://src/components/views/CardGenerator/CardGenerator.module.scss","webpack://src/components/ui/Card/Card.module.scss","webpack://src/components/ui/SvgIcon/SvgIcon.module.scss"],"names":[],"mappings":"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","file":"main.9dcf5811.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Lora&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Dosis&display=swap);\n@import url(https://fonts.googleapis.com/icon?family=Material+Icons);\n@font-face{font-family:\"Spartan\";font-style:normal;font-weight:400;font-display:swap;src:local(\"Spartan\"),url(../../static/media/Spartan-VariableFont_wght.0427aac0.ttf) format(\"truetype\")}@font-face{font-family:\"Poppins\";font-style:normal;font-weight:400;font-display:swap;src:local(\"Poppins\"),url(../../static/media/Poppins-Regular.8081832f.ttf) format(\"truetype\")}@font-face{font-family:\"All Round Gothic\";src:local(\"All Round Gothic\"),url(../../static/media/AllRoundGothicW01Bold.68250e7b.ttf) format(\"truetype\")}@font-face{font-family:\"Dosis\";font-style:normal;font-weight:400;font-display:swap;src:local(\"Dosis\"),url(../../static/media/Dosis-Regular.be60a48f.ttf) format(\"truetype\")}\n.material-icons{line-height:1.25}\n.Storage_Storage__Awfw9{position:fixed;z-index:10003;left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}\n.App{font-family:var(--ff),sans-serif}.App *{box-sizing:border-box}.themed-title{font-family:\"Spartan\",open-sans}ul{list-style:none;-webkit-margin-after:0;margin-block-end:0;-webkit-margin-before:0;margin-block-start:0;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;-webkit-padding-start:0px;padding-inline-start:0px}.placeholder{opacity:.3}.pointer{cursor:pointer}.link{cursor:pointer;text-decoration:underline}.container{--container-margin: .4em;--flex-base: 1 1 100%;margin:var(--container-margin)}.container>*{flex-basis:var(--flex-base)}.container .content{min-height:50vh}@media(min-width: 321px)and (max-width: 768px){.container{--container-margin: 1em;--flex-base: 1 1 50%}}@media(min-width: 769px){.container{--container-margin: 2em;--flex-base: 1 1 33%}}\n.Button_Button__3rzbO{border:none;padding:.4em;margin:.1em .1em;color:var(--text-color);background:var(--background-color);cursor:pointer;transition:all 100ms;position:relative;z-index:2}.Button_Button__3rzbO::before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;background:var(--primary-gradient);opacity:.2}.Button_Button__3rzbO:hover::before{content:\"\";position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;background:var(--secondary-gradient);opacity:.2}.Button_Button__3rzbO.Button_fixed__1DXPv{position:fixed}.Button_Button__3rzbO.Button_fixed-ul__1Keg2{position:fixed;top:2em;left:2em}.Button_Button__3rzbO.Button_fixed-ur__snZPS{position:fixed;top:2em;right:2em}.Button_Button__3rzbO.Button_fixed-bl__26ER4{position:fixed;bottom:2em;left:2em}.Button_Button__3rzbO.Button_fixed-br__dzk30{position:fixed;bottom:2em;right:2em}.Button_Button__3rzbO.Button_abs__227Jw{position:absolute}.Button_Button__3rzbO.Button_abs-ul__2YC43{position:absolute;top:2em;left:2em}.Button_Button__3rzbO.Button_abs-ur__H787z{position:absolute;top:2em;right:2em}.Button_Button__3rzbO.Button_abs-bl__3YOYk{position:absolute;bottom:2em;left:2em}.Button_Button__3rzbO.Button_abs-br__37nAs{position:absolute;bottom:2em;right:2em}.Button_Button__3rzbO:active,.Button_Button__3rzbO.Button_active__bZS_r{background:var(--primary-gradient)}.Button_Button__3rzbO.Button_big__15m3N{font-size:1.6em}.Button_Button__3rzbO.Button_small__3cVyH{font-size:70%}.Button_Button__3rzbO.Button_maxZIndex__1PWE7{z-index:1000000}.Button_Button__3rzbO.Button_rounded__1mN19{border-radius:4em}.Button_Button__3rzbO.Button_transparent__3Txqc{background:transparent;border:solid .03em var(--text-color)}.Button_Button__3rzbO.Button_transparent__3Txqc::before{background:transparent}.Button_Button__3rzbO.Button_singleCharClose__1eEFn{width:2em;height:2em;border-radius:1em}.Button_Button__3rzbO.Button_singleCharClose__1eEFn::before{border-radius:1em}\n.CardGenerator_CardGenerator__1_z4o .CardGenerator_result__22RiN{padding:2em 0;display:flex;justify-content:center;align-items:center}.CardGenerator_CardGenerator__1_z4o .CardGenerator_error__yY34j{color:red;font-size:120%}\n.Card_Card__5pv1N{width:300px;max-width:95vw;border-radius:.4em;position:relative;overflow:hidden;box-shadow:-0.2em .4em 1em #000;display:inline-block;margin:.5em;transition:box-shadow 200ms,-webkit-transform 100ms linear;transition:transform 100ms linear,box-shadow 200ms;transition:transform 100ms linear,box-shadow 200ms,-webkit-transform 100ms linear}.Card_Card__5pv1N .Card_kommunegruppe__3W-XL{background:var(--secondary-dark-color)}.Card_Card__5pv1N .Card_cardImg__4Uk1j{background:var(--background-color);padding:1em}.Card_Card__5pv1N .Card_cardImg__4Uk1j img,.Card_Card__5pv1N .Card_cardImg__4Uk1j .Card_icon__3WkHZ{display:inline-block;width:50%}.Card_Card__5pv1N .Card_container__3fVXz{padding:.4em}.Card_Card__5pv1N .Card_container__3fVXz .Card_bg__bzm3l{transition:background-size 200ms linear}.Card_Card__5pv1N:hover{box-shadow:-0.3em .6em 1.5em #000}.Card_Card__5pv1N ul{list-style:none;-webkit-margin-before:0;margin-block-start:0;-webkit-margin-after:0;margin-block-end:0;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;-webkit-padding-start:0px;padding-inline-start:0px}.Card_Card__5pv1N .Card_bg__bzm3l{position:absolute;top:0;left:0;width:100%;height:100%;background:var(--secondary-gradient);background-position:center;background-size:cover;background-repeat:no-repeat;z-index:-2}.Card_Card__5pv1N.Card_kommunegruppe__3W-XL .Card_bg__bzm3l,.Card_Card__5pv1N.Card_Kommunegruppe__2ewtP .Card_bg__bzm3l{background:var(--primary-gradient)}.Card_Card__5pv1N .Card_container__3fVXz .Card_filter__2AMca{position:absolute;top:0;left:0;width:100%;height:100%;background-color:var(--background-color);opacity:.76;z-index:-1}.Card_Card__5pv1N .Card_container__3fVXz .Card_title__dvXbo{text-align:center;width:100%;padding-top:1em;margin:0}.Card_Card__5pv1N .Card_container__3fVXz .Card_title__dvXbo.Card_invisible__2osPh{opacity:0}.Card_Card__5pv1N .Card_container__3fVXz .Card_content__3XUyx{padding:.4em;z-index:2}.Card_Card__5pv1N .Card_container__3fVXz .Card_content__3XUyx li{margin-top:.6em}.Card_Card__5pv1N .Card_container__3fVXz .Card_content__3XUyx .Card_qrcode__3m5Hi{text-align:center}.Card_Card__5pv1N .Card_container__3fVXz .Card_content__3XUyx .Card_links__15x_m{word-break:break-all}\n.SvgIcon_SvgIcon__3ciHI{width:100%;height:100%}\n","/** FONTS */\n/* @import url('https://fonts.googleapis.com/css2?family=Didact+Gothic&family=Montserrat&family=Open+Sans&family=Poppins&family=Roboto&display=swap'); */\n/* \n font-family: 'Didact Gothic', sans-serif;\n font-family: 'Montserrat', sans-serif;\n font-family: 'Open Sans', sans-serif;\n font-family: 'Poppins', sans-serif;\n font-family: 'Roboto', sans-serif; \n font-family: 'Dosis', sans-serif;\n*/\n\n@import url('https://fonts.googleapis.com/css2?family=Lora&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Dosis&display=swap');\n\n@font-face {\n  font-family: 'Spartan';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: local('Spartan'), url(./Spartan/Spartan-VariableFont_wght.ttf) format('truetype');\n}\n@font-face {\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: local('Poppins'), url(./Poppins/Poppins-Regular.ttf) format('truetype');\n}\n\n@font-face {\n  font-family: 'All Round Gothic';\n  src: local('All Round Gothic'), url(./AllRoundGothic/AllRoundGothicW01Bold.ttf) format('truetype');\n}\n\n@font-face {\n  font-family: 'Dosis';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: local('Dosis'), url(./Dosis/Dosis-Regular.ttf) format('truetype');\n}\n\n","/** ICON FONT */\n/** @import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"); */\n\n@import url('_libs/_fonts/fonts.css');\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n.material-icons {\n    line-height: 1.25;\n}\n",".Storage {\n    // display: none;\n    position: fixed;\n    z-index: 10003;\n    left: 50%;\n    transform: translate(-50%);\n}","/** MEDIA MIXIN - https://raw.githubusercontent.com/eduardoboucas/include-media/master/dist/_include-media.scss */\n@import \"/src/_libs/_styles/include-media.scss\";\n\n/** copy paste when needed :/ */\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n.App {\n  font-family: var(--ff), sans-serif;\n  * {\n    box-sizing: border-box;\n  }\n}\n\n.themed-title {\n  font-family: 'Spartan',open-sans;\n}\n\nul {\n  list-style: none;\n  margin-block-end: 0;\n  margin-block-start: 0;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n  padding-inline-start: 0px;\n}\n\n.placeholder {\n  opacity: .3;\n}\n\n.pointer {\n  cursor: pointer;\n}\n\n.link {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n  .container {\n      --container-margin: .4em;\n      --flex-base: 1 1 100%;\n      margin: var(--container-margin);\n      > * {\n        flex-basis: var(--flex-base);\n      }\n      .content {\n            min-height: 50vh;\n      }\n  }\n@include media(\">phone\", \"<=tablet\") {\n  .container {\n    --container-margin: 1em;\n    --flex-base: 1 1 50%;\n  }\n}\n@include media(\">tablet\") {\n  .container {\n    --container-margin: 2em;\n    --flex-base: 1 1 33%;\n      // margin: 2em;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}",".Button {\n    // border: 1px solid var(--text-color);\n\n    border: none;\n    // border-radius: .3em;\n    padding: .4em;\n    margin: 0.1em .1em;\n    color: var(--text-color);\n    background: var(--background-color);\n    cursor: pointer;\n    transition: all 100ms;\n    position: relative;\n    z-index: 2;\n    \n    &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        background: var(--primary-gradient);\n        opacity: .2;\n    }\n    &:hover::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        background: var(--secondary-gradient);\n        opacity: .2;\n    }\n    // &:focus, \n    &.fixed {\n        position: fixed;\n    }\n    &.fixed-ul{\n        position: fixed;\n        top: 2em;\n        left: 2em;\n    }\n    &.fixed-ur{\n        position: fixed;\n        top: 2em;\n        right: 2em;\n    }\n    &.fixed-bl{\n        position: fixed;\n        bottom: 2em;\n        left: 2em;\n    }\n    &.fixed-br{\n        position: fixed;\n        bottom: 2em;\n        right: 2em;\n    }\n    &.abs {\n        position: absolute;\n    }\n    &.abs-ul{\n        position: absolute;\n        top: 2em;\n        left: 2em;\n    }\n    &.abs-ur{\n        position: absolute;\n        top: 2em;\n        right: 2em;\n    }\n    &.abs-bl{\n        position: absolute;\n        bottom: 2em;\n        left: 2em;\n    }\n    &.abs-br{\n        position: absolute;\n        bottom: 2em;\n        right: 2em;\n    }\n    &:active, &.active {\n        // background-color: var(--primary-dark-color);\n        background: var(--primary-gradient);\n        // box-shadow: 0 0 .2em var(--text-color);\n        // text-shadow: 0 0 .2em var(--text-color);\n    }\n\n    &.big {\n        font-size: 1.6em;\n    }\n\n    &.small {\n        font-size: 70%;\n    }\n\n    &.maxZIndex {\n        z-index: 1000000;\n    }\n    &.rounded {\n        border-radius: 4em;\n    }\n    &.transparent {\n        background: transparent;\n        &::before {\n        background: transparent;\n\n        }\n        border: solid .03em var(--text-color);\n    }\n    &.singleCharClose {\n        width: 2em;\n        height: 2em;\n        border-radius: 1em; \n        &::before {\n            border-radius: 1em; \n        }\n    }\n}",".CardGenerator {\n    .result {\n        padding: 2em 0;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .error {\n        color: red; \n        font-size: 120%;\n    }\n}\n",".Card {\n    width: 300px;\n    max-width: 95vw;\n    // border: 1px solid var(--primary-dark-color);\n    border-radius: .4em;\n    position: relative;\n    overflow: hidden;\n    box-shadow: -.2em .4em 1em black;\n    // cursor: pointer;\n    display: inline-block;\n    margin: .5em;\n    transition: transform 100ms linear, box-shadow 200ms;\n    .kommunegruppe {\n        background: var(--secondary-dark-color);\n    }\n    .cardImg {\n        background: var(--background-color);\n        img, .icon {\n            display: inline-block;\n            width: 50%;\n        }\n        padding: 1em;\n    }\n    .container {\n        padding: .4em;\n    }\n    .container .bg { \n        transition: background-size 200ms linear;\n    }\n    &:hover {\n        // transform: scale(1.01);\n        box-shadow: -.3em .6em 1.5em black;;\n    }\n    ul {\n        list-style: none;\n        margin-block-start: 0;\n    margin-block-end: 0;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 0px;\n    }\n    .bg {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: var(--secondary-gradient);\n        background-position: center;\n        background-size: cover;\n        background-repeat: no-repeat;\n        z-index: -2;\n    }\n    &.kommunegruppe, &.Kommunegruppe {\n        .bg{\n            background: var(--primary-gradient);\n        }\n    }\n    .container {\n            // padding: 2em;\n\n\n    .filter {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: var(--background-color);\n        opacity: .76;\n        z-index: -1;\n        \n    }\n        .title {\n            text-align: center;\n            width: 100%;\n            // padding-bottom: .0em;\n            padding-top: 1em;\n            margin: 0;\n            &.invisible {\n                opacity: 0;\n            }\n            /* Opaque title background */\n            // border-bottom: 1px solid var(--text-color);\n            // background-color: var(--background-color);\n            // background: var(--primary-gradient);\n            // background: var(--secondary-gradient);\n            }\n        .content {\n            padding: .4em;\n            li {margin-top: .6em;}\n            .qrcode {\n                text-align: center;\n            }\n            .links {\n                word-break: break-all;\n            }\n            z-index: 2;\n        }\n    }\n}",".SvgIcon {\n    width: 100%;\n    height: 100%;\n}"]}